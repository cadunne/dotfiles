#! /bin/zsh
set -e

DIR=$(cd `dirname $0` && pwd)

# Install Oh My Zsh if not already installed
if [ -d ~/.oh-my-zsh ]; then
    echo "Oh My Zsh is already installed"
else
    echo "Installing Oh My Zsh..."
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

# Install Zsh plugins and themes
echo "Installing Zsh plugins and themes..."
echo "==========================================================="
echo "             Installing zsh-autosuggestions                 "
echo "-----------------------------------------------------------"
if [ ! -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
fi

echo "==========================================================="
echo "             Installing zsh-syntax-highlighting             "
echo "-----------------------------------------------------------"
if [ ! -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
fi

echo "==========================================================="
echo "             Installing powerlevel10k                       "
echo "-----------------------------------------------------------"
if [ ! -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k ]; then
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k
fi

function configure_screenshot_storage(){
	# Setup the screenshots directory and have the OS store all screenshots there
	[ ! -d ~/screenshots ] && mkdir ~/screenshots
	defaults write com.apple.screencapture location ~/screenshots
	defaults write com.apple.screencapture "show-thumbnail" -bool "false" 
	killall SystemUIServer
}

function configure_dock_settings(){
	defaults write com.apple.dock "autohide" -bool "true"
	defaults write com.apple.dock "orientation" -string "left"
	killall Dock
}

function configure_finder() {
	defaults write com.apple.finder "ShowPathbar" -bool "true" && killall Finder
}

function load_nvm(){
	export NVM_DIR="/usr/local/share/nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
	[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}

# Install NVM if not already installed
if [ -z "$(which nvm)" ]; then
	echo "Installing NVM..."
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
fi

load_nvm

echo "Symlinking dotfiles..."
ln -sf $DIR/.functions ~/.functions
ln -sf $DIR/.zshrc ~/.zshrc
ln -sf $DIR/.aliases ~/.aliases
ln -sf $DIR/.codespaces-config ~/.codespaces-config
ln -sf $DIR/.local-config ~/.local-config
ln -sf $DIR/.p10k.zsh ~/.p10k.zsh
mkdir -p ~/.docker
ln -sf $DIR/docker-config.json ~/.docker/config.json

if [[ $OSTYPE == 'darwin'* ]]; then
	echo -ne "Updating MacOS UI config...\033[0K\r"
	configure_screenshot_storage
	configure_dock_settings
	configure_finder
	echo -e "Updating MacOS UI config... Done"
fi

# Make sure default shell is set to zsh
if [[ "$SHELL" != *"zsh"* ]]; then
	echo "Setting zsh as default shell..."
	chsh -s $(which zsh)
fi

echo "Installing node..."
nvm install --lts

echo "Configuring shell..."
source ~/.zshrc
echo "Done. Your dotfiles have been installed!"
echo "Note: For the full Powerlevel10k experience, install the recommended fonts from https://github.com/romkatv/powerlevel10k#meslo-nerd-font-patched-for-powerlevel10k"
echo "Then run 'p10k configure' to customize your prompt."

